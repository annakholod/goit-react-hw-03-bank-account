{"version":3,"sources":["components/Dashboard/Controls/Controls.module.css","components/Dashboard/Controls/Controls.jsx","components/Dashboard/Balance/Balance.jsx","components/Dashboard/TransactionHistory/TransactionHistory.jsx","helpers/helpers.js","components/Dashboard/Dashboard.jsx","components/App/App.jsx","index.js","components/Dashboard/TransactionHistory/TransactionHistory.module.css","components/Dashboard/Balance/Balance.module.css"],"names":["module","exports","Controls","handleChangeInput","onClick","inputValue","className","style","controls","controlsOverlay","controlsInput","type","value","onChange","controlsBtn","name","Balance","changeBalance","changeFinance","deposit","withdraw","balance","TransactionHistory","transactions","history","tableHeader","tableRow","map","el","key","id","amount","date","notifyNoMoney","toast","notifyNotSum","notifyIncorrectInput","Dashboard","state","target","includes","setState","handleSubmit","evt","preventDefault","Number","addTransactionToState","prevState","shortid","generate","Date","toLocaleString","reduce","acc","length","transactionsFromLocal","localStorage","getItem","this","JSON","parse","err","console","log","prevProps","setItem","stringify","dashboard","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc7918f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__3dMAf\",\"controlsOverlay\":\"Controls_controlsOverlay__kjhF_\",\"controlsInput\":\"Controls_controlsInput__n9FOo\",\"controlsBtn\":\"Controls_controlsBtn__i2N5h\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Controls.module.css';\n\nconst Controls = ({ handleChangeInput, onClick, inputValue }) => (\n  <section className={style.controls}>\n    <div className={style.controlsOverlay}>\n      <input\n        className={style.controlsInput}\n        type=\"number\"\n        value={inputValue}\n        onChange={handleChangeInput}\n      />\n      <button\n        className={style.controlsBtn}\n        type=\"button\"\n        name=\"deposit\"\n        onClick={onClick}\n      >\n        Deposit\n      </button>\n      <button\n        className={style.controlsBtn}\n        type=\"button\"\n        name=\"withdraw\"\n        onClick={onClick}\n      >\n        Withdraw\n      </button>\n    </div>\n  </section>\n);\n\nControls.propTypes = {\n  handleChangeInput: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n  inputValue: PropTypes.string.isRequired,\n};\n\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Balance.module.css';\n\nconst Balance = ({ changeBalance, changeFinance }) => {\n  const deposit = changeFinance('deposit');\n  const withdraw = changeFinance('withdraw');\n  const balance = changeBalance();\n  return (\n    <section className={style.balance}>\n      <p className={style.deposit}>\n        <span>⬆ </span>\n        {deposit}$\n      </p>\n      <p className={style.withdraw}>\n        <span>⬇ </span>\n        {withdraw}$\n      </p>\n      <span>Balance: {balance}$</span>\n    </section>\n  );\n};\n\nBalance.propTypes = {\n  changeBalance: PropTypes.func.isRequired,\n  changeFinance: PropTypes.func.isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ transactions }) => (\n  <table className={style.history}>\n    <thead className={style.tableHeader}>\n      <tr className={style.tableRow}>\n        <th>Transaction</th>\n        <th>Amount</th>\n        <th>Date</th>\n      </tr>\n    </thead>\n    <tbody>\n      {transactions.map(el => (\n        <tr className={style.tableRow} key={el.id}>\n          <td>{el.type}</td>\n          <td>{el.amount}$</td>\n          <td>{el.date}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst notifyNoMoney = () =>\n  toast('На счету недостаточно средств для проведения операции!');\n\nconst notifyNotSum = () => toast('Введите сумму для проведения операции!');\n\nconst notifyIncorrectInput = () => toast('Сумма не должна быть отрицательной!');\n\nexport { notifyNoMoney, notifyNotSum, notifyIncorrectInput };\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { ToastContainer } from 'react-toastify';\nimport style from './Dashboard.module.css';\nimport Controls from './Controls/Controls';\nimport Balance from './Balance/Balance';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\nimport {\n  notifyNoMoney,\n  notifyNotSum,\n  notifyIncorrectInput,\n} from '../../helpers/helpers';\n\nclass Dashboard extends Component {\n  state = {\n    transactions: [],\n    inputValue: '',\n  };\n\n  componentDidMount() {\n    try {\n      const transactionsFromLocal = localStorage.getItem('transactions');\n      return transactionsFromLocal === null\n        ? []\n        : this.setState({ transactions: JSON.parse(transactionsFromLocal) });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { transactions } = this.state;\n\n    if (prevState.transactions !== transactions) {\n      try {\n        localStorage.setItem('transactions', JSON.stringify(transactions));\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  handleChangeInput = ({ target }) => {\n    const { value } = target;\n    if (value.includes('-')) {\n      notifyIncorrectInput();\n      return;\n    }\n    this.setState({ inputValue: value });\n  };\n\n  handleSubmit = evt => {\n    const { inputValue } = this.state;\n    const { name } = evt.target;\n\n    evt.preventDefault();\n    if (inputValue === '0') {\n      notifyNotSum();\n      return;\n    }\n    if (name === 'withdraw' && Number(inputValue) > this.changeBalance()) {\n      notifyNoMoney();\n      return;\n    }\n    this.addTransactionToState(name, inputValue);\n  };\n\n  addTransactionToState = (name, inputValue) => {\n    this.setState(prevState => ({\n      inputValue: '',\n      transactions: [\n        ...prevState.transactions,\n        {\n          id: shortid.generate(),\n          type: name,\n          amount: inputValue,\n          date: new Date().toLocaleString('en-GB'),\n        },\n      ],\n    }));\n  };\n\n  changeFinance = type => {\n    const { transactions } = this.state;\n\n    return transactions.reduce(\n      (acc, el) => (el.type === type ? acc + Number(el.amount) : acc),\n      0,\n    );\n  };\n\n  changeBalance = () => {\n    const { transactions } = this.state;\n\n    let balance = 0;\n    if (transactions.length !== 0) {\n      balance = this.changeFinance('deposit') - this.changeFinance('withdraw');\n    }\n    return balance;\n  };\n\n  render() {\n    const { transactions, inputValue } = this.state;\n\n    return (\n      <div className={style.dashboard}>\n        <Controls\n          inputValue={inputValue}\n          handleChangeInput={this.handleChangeInput}\n          onClick={this.handleSubmit}\n        />\n        <Balance\n          changeBalance={this.changeBalance}\n          changeFinance={this.changeFinance}\n        />\n        <TransactionHistory transactions={transactions} />\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport './App.css';\nimport Dashboard from '../Dashboard/Dashboard';\n\nconst App = () => <Dashboard />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__3al4t\",\"tableHeader\":\"TransactionHistory_tableHeader__1-iZF\",\"tableRow\":\"TransactionHistory_tableRow__23DIl\",\"tBodyRow\":\"TransactionHistory_tBodyRow__1loig TransactionHistory_tableRow__23DIl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__1-Twb\",\"deposit\":\"Balance_deposit__1uOea\",\"withdraw\":\"Balance_withdraw__2iWzA\"};"],"sourceRoot":""}